import { ArrowRight, Group, MoveToInbox, Send, Settings } from "@mui/icons-material";
import GridViewIcon from "@mui/icons-material/GridView";
import { IconButton, MenuItem, Select, SelectChangeEvent } from "@mui/material";
import Paper from "@mui/material/Paper";
import Typography from "@mui/material/Typography";
import { Box } from "@mui/system";
import { Commendation, Member, PrismaClient, Team } from "@prisma/client";
import { InferGetServerSidePropsType } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import bz from "../assets/BZ-letters.png"

const prisma = new PrismaClient();

export async function getServerSideProps() {
  const teams = await prisma.team.findMany({ include: { members: { include: { commendations: { select: { id: true } }, sentCommendations: { select: { id: true } } } } }, orderBy: { name: "asc" } })
  const commendationsSent = teams.reduce((previous, current) => {
    previous.push(
      current.members.reduce((previousCommendationsCount, currentMember) => {
        return previousCommendationsCount + currentMember.sentCommendations.length;
      }, 0)
    )
    return previous;
  }, [] as number[])
  const commendationsReceived = teams.reduce((previousTeamCommendationCount, currentTeam) => {
    previousTeamCommendationCount.push(
      currentTeam.members.reduce((previousCommendationsCount, currentMember) => {
        return previousCommendationsCount + currentMember.commendations.length;
      }, 0)
    )
    return previousTeamCommendationCount;
  }, [] as number[])

  return { props: { teams, commendationsReceived, commendationsSent } };
}

export default function Admin({ teams, commendationsReceived, commendationsSent }: InferGetServerSidePropsType<typeof getServerSideProps>) {

  const [viewMode, setViewMode] = useState("square");
  const [sortMode, setSortMode] = useState("atoz");

  return (
    <>
      <Head>
        <title>Admin Portal</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box display={"flex"} flexDirection={"row"} sx={{ marginTop: 1 }}>
          <Typography flexGrow={1} textAlign={"center"} fontSize={24} fontWeight={"bold"} mt={1}>Admin Dashboard</Typography>
          <Select label="View" name="view" value={viewMode} onChange={(e: SelectChangeEvent) => setViewMode(e.target.value)}>
            <MenuItem key={1} value={"square"}>
              <Box display={"flex"} flexDirection={"row"}>
                <GridViewIcon></GridViewIcon>
                <Typography ml={1} fontWeight="bold">Square View</Typography>
              </Box>
            </MenuItem>
          </Select>
          <Select label="Sort By" name="sortBy" value={sortMode} onChange={(e: SelectChangeEvent) => setSortMode(e.target.value)} sx={{ marginLeft: 1 }}>
            <MenuItem key={"atoz"} value={"atoz"}>
              <Box display={"flex"} flexDirection={"row"}>
                <Typography>A</Typography>
                <ArrowRight></ArrowRight>
                <Typography>Z</Typography>
              </Box>
            </MenuItem>
            <MenuItem key={"ztoa"} value={"ztoa"}>
              <Box display={"flex"} flexDirection={"row"}>
                <Typography>Z</Typography>
                <ArrowRight></ArrowRight>
                <Typography>A</Typography>
              </Box>
            </MenuItem>
          </Select>
          <IconButton>
            <Settings sx={{ marginY: "auto", marginX: 2 }}></Settings>
          </IconButton>
        </Box>
        <Box display={"flex"} flexDirection={"row"} flexWrap={"wrap"}>
          {
            teams.map((currentTeam, currentIndex) =>
              <Paper sx={{ height: 320, flexGrow: 1, marginX: 4 }}>
                <Box position={"relative"} height={"60%"}>
                  <Image src={currentTeam.imageURL ?? bz.src} alt={currentTeam.name + " Logo"} fill style={{ objectFit: "contain", margin: 10 }} />
                </Box>
                <Typography textAlign={"center"} fontSize={20} mt={3}>{currentTeam.name}</Typography>
                <Box display={"flex"} mt={2}>
                  <Box flexGrow={1}></Box>
                  <Box sx={{ borderRadius: 5, backgroundColor: "blue", paddingY: 1, paddingX: 2, marginRight: 1 }} display={"flex"}>
                    <Group></Group>
                    <Typography ml={1} textAlign={"right"}>{currentTeam.members.length}</Typography>
                  </Box>
                  <Box sx={{ borderRadius: 5, backgroundColor: "blue", paddingY: 1, paddingX: 2 }} display={"flex"}>
                    <Send></Send>
                    <Typography ml={1} textAlign={"right"}>{commendationsSent[currentIndex]}</Typography>
                  </Box>
                  <Box sx={{ borderRadius: 5, backgroundColor: "blue", paddingY: 1, paddingX: 2, marginLeft: 1 }} display={"flex"}>
                    <MoveToInbox></MoveToInbox>
                    <Typography ml={1} textAlign={"right"}>{commendationsReceived[currentIndex]}</Typography>
                  </Box>
                  <Box flexGrow={1}></Box>
                </Box>
              </Paper>
            )
          }
        </Box>
      </main>
    </>
  )
}